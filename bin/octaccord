#!/usr/bin/env ruby

# Create Iteration pages automatically from Github issues

if File.symlink?(__FILE__) and ENV["RBENV_VERSION"]
  ENV["RBENV_VERSION"] = nil
  shims_path = File.expand_path("shims", ENV["RBENV_ROOT"])
  ENV["PATH"] = shims_path + ":" + ENV["PATH"]
  exec(File.readlink(__FILE__), *ARGV)
end

ENV["BUNDLE_GEMFILE"] = File.expand_path("../../Gemfile", __FILE__)

require 'rubygems'
require 'bundler/setup'
Bundler.require

require "pp"

Encoding.default_external="UTF-8"

config = Pit.get("github.com", :require => {
        "login"    => "Your login name here",
        "password" => "Your password here"
})

client = Octokit::Client.new(:login => config["login"],
                             :password => config["password"])

# parse options
while ARGV[0] =~ /^--(.*)/
  case $1
  when "debug"
    $OCTACCORD_DEBUG = true
  when "test"
    $OCTACCORD_TEST = true
  end
  ARGV.shift
end

unless /.*\/.*/ =~ ARGV[0]
  STDERR.print "Usage: octaccord github-user/repos\n"
  exit 1
end

repos_name = ARGV.shift

## main

Octokit.auto_paginate = true
issues = client.issues repos_name

pp issues if $OCTACCORD_DEBUG

issues.each do |issue|
  label_names = issue.labels.map{|label| label.name}.join(',')
  puts "##{issue.number} #{issue.title} (#{issue.assignee.login rescue nil}) [#{label_names}]"
end
