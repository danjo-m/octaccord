#!/usr/bin/env ruby

if File.symlink?(__FILE__) and ENV["RBENV_VERSION"]
  ENV["RBENV_VERSION"] = nil
  shims_path = File.expand_path("shims", ENV["RBENV_ROOT"])
  ENV["PATH"] = shims_path + ":" + ENV["PATH"]
  exec(File.readlink(__FILE__), *ARGV)
end

ENV["BUNDLE_GEMFILE"] = File.expand_path("../../Gemfile", __FILE__)

require 'rubygems'
require 'bundler/setup'
Bundler.require

require "pp"

Encoding.default_external="UTF-8"

class OctaccordCLI < Thor
  check_unknown_options!
  package_name 'Octaccord'

  map ["--version", "-v"] => :version

  default_command :help
  map ["--help", "-h"] => :help

  desc "version", "Show version"
  def version
    puts Octaccord::VERSION
  end

  ################################################################
  ## Command: scan
  ################################################################
  desc "scan REPOSITORY RANGE", "Scan issues in RANGE"

  long_desc <<-LONGDESC
    scan issues in date RANGE.
  LONGDESC

  method_option :format, :desc => "Set printing format (pbl, list, table)"

  def scan(repos, range = :all)
    config = Pit.get("github.com", :require => {
      "login"    => "Your login name here",
      "password" => "Your password here"
    })
    Octokit.auto_paginate = true
    client = Octokit::Client.new(:login => config["login"], :password => config["password"])
    Octaccord::Command::Scan.new(client, repos, range, options[:format] || :list)
  end
end # class OctaccordCLI

command = OctaccordCLI.start(ARGV)
